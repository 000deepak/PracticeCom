Regex

1. [abc]-------------------Either 'a' or 'b' or 'c'
2. [^abc] -----------------Except 'a' and 'b' and 'c'
3. [a-z] --------------------Any lower case alphabet symbol
4. [A-Z] --------------------Any upper case alphabet symbol
5. [a-zA-Z] ----------------Any alphabet symbol
6. [0-9] --------------------Any digit from 0 to 9
7. [a-zA-Z0-9] ------------Any alphanumeric character
8. [^a-zA-Z0-9] ------------Any special character

^-must match at begining 
$-must match at end

\s-----space character
\S-----any character except space character
\d-----Any digit from o to 9[o-9]
\D-----any character except digit
\w-----Any word character[a-zA-Z0-9]
\W-----any character except word character(special character)
. -----Any character including special characters.

\s   compiler takes it as backslash so use 
\\s  it takes as symbol

create tokens based on "."  use "\\." 
\\ takes it as a symbol


a-----Exactly one 'a'
a+----At least one 'a'
a? ---At most one 'a'
a*----Any no of a's including zero number


TOKENIZER(To divide the strings or pattern)

Pattern class split() method:
Pattern p=Pattern.compile("\\s");
String[] s=p.split("ashok software solutions");

String class split() method:
String s="www.saijobs.com";
String[] s1=s.split("\\.");

StringTokenizer:(default space tokenizer)
 This class present in java.util package.
 It is a specially designed class to perform string tokenization.
tringTokenizerst=new StringTokenizer("sai
software solutions");

10 digit phone no - [7-9][0-9]{9}  
11 digit phone no - 0?[7-9][0-9]{9}
either(10,11,12) digit phone no - (0|91)?[7-9][0-9]{9}    

email is not case sensitive
email id-[a-zA-Z][a-zA-Z0-9-.]*@[a-zA-Z0-9]+([.][a-zA-Z]+)+")

1.part - (a-zA-Z0-9) & (-)&(.)
2.@
3.gmail[a-zA-Z0-9]
4.(.)
5.com[a-zA-Z]
